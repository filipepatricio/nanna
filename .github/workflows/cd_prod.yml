name: CD Prod

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths-ignore:
      - '**/README.md'
      - 'test/**'
      - 'scripts/**'
      - '.vscode/**'
      - '.github/**'
      - '.idea/**'
      - '.fvm/**'
      - '.dart_tool/**'
      - '.tool-versions'
      - 'analysis_options.yaml'
      - 'commitlint.config.js'
      - 'dart-test.yaml'

env:
  JAVA_VERSION: '12.x'
  RUBY_VERSION: '3.1'

jobs:
  tag_release:
    runs-on: ubuntu-latest
    outputs:
      current_version: ${{ steps.tag_version.outputs.previous_version }}
      new_version: ${{ steps.tag_version.outputs.new_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ github.token }}
          tag_prefix: ''
          default_bump: false
          default_prerelease_bump: false

  deploy_android:
    runs-on: ubuntu-latest
    needs: tag_release
    timeout-minutes: 20
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Ruby ${{ env.RUBY_VERSION }} for fastlane
        uses: actions/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}

      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JAVA_VERSION }}

      - name: Decrypt Android keys
        run: sh ./.github/scripts/decrypt_android_secrets.sh
        env:
          ANDROID_KEYS_SECRET_PASSPHRASE: ${{ secrets.ANDROID_KEYS_SECRET_PASSPHRASE }}

      # Your pubspec.yaml file must contain the Flutter version under the environment:flutter: key.
      - name: Get Flutter version from pubspec.yaml
        id: get-flutter-version
        uses: zgosalvez/github-actions-get-flutter-version-env@v2

      - name: Sets Flutter environment
        uses: subosito/flutter-action@v2.8.0
        with:
          flutter-version: ${{ steps.get-flutter-version.outputs.version }}

      - name: Install Flutter dependencies
        run: flutter pub get

      - name: Run easy_localization:generate and generate files
        run: flutter pub run easy_localization:generate --source-dir ./assets/translations -f keys -o local_keys.g.dart

      - name: Run build_runner and generate files
        run: flutter pub run build_runner build --delete-conflicting-outputs

      - name: Build app with current version
        if: "${{ needs.tag_release.outputs.new_version == '' }}"
        env:
          BUILD_NUMBER: ${{ github.run_number }}
          VERSION_NUMBER: ${{ needs.tag_release.outputs.current_version }}
        run: flutter build appbundle --release --dart-define=env=prod --flavor prod --build-number="$BUILD_NUMBER" --build-name="$VERSION_NUMBER"

      - name: Build app with new version
        if: "${{ needs.tag_release.outputs.new_version != '' }}"
        env:
          BUILD_NUMBER: ${{ github.run_number }}
          VERSION_NUMBER: ${{ needs.tag_release.outputs.new_version }}
        run: flutter build appbundle --release --dart-define=env=prod --flavor prod --build-number="$BUILD_NUMBER" --build-name="$VERSION_NUMBER"

      - name: Setup Google Play credentials
        run: |
          echo "$GOOGLE_PLAY_CREDENTIALS" > google_play_credentials.json.b64
          base64 -d -i google_play_credentials.json.b64 > google_play_credentials.json
        env:
          GOOGLE_PLAY_CREDENTIALS: ${{ secrets.GOOGLE_PLAY_CREDENTIALS }}

      - name: Upload appbundle to closed testing
        uses: maierj/fastlane-action@v2.3.0
        with:
          lane: 'internal_play_store'
          subdirectory: android

      - name: Slack Notification
        uses: 8398a7/action-slack@v3
        if: always()
        with:
          status: ${{ job.status }}
          fields: repo,author,job,took,workflow,pullRequest
          mention: 'here'
          if_mention: failure
          channel: 'C03HLNW54EN'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_RELEASES_CHANNEL_WEBHOOK_URL }}
          MATRIX_CONTEXT: ${{ toJson(matrix) }}

  deploy_ios:
    runs-on: macos-12
    needs: tag_release
    timeout-minutes: 30
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Setup Ruby for fastlane
        uses: actions/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}

      # Your pubspec.yaml file must contain the Flutter version under the environment:flutter: key.
      - name: Get Flutter version from pubspec.yaml
        id: get-flutter-version
        uses: zgosalvez/github-actions-get-flutter-version-env@v2

      - name: Sets up a Flutter environment for use in actions
        uses: subosito/flutter-action@v2.8.0
        with:
          flutter-version: ${{ steps.get-flutter-version.outputs.version }}
      - run: echo "Setup flutter environment with version ${{ steps.get-flutter-version.outputs.version }}"

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Run easy_localization:generate and generate files
        run: flutter pub run easy_localization:generate --source-dir ./assets/translations -f keys -o local_keys.g.dart

      - name: Run build_runner and generate files
        run: flutter pub run build_runner build --delete-conflicting-outputs

      - name: Build app with current version
        if: "${{ needs.tag_release.outputs.new_version == '' }}"
        env:
          BUILD_NUMBER: ${{ github.run_number }}
          VERSION_NUMBER: ${{ needs.tag_release.outputs.current_version }}
        run: flutter build ios --config-only --release --no-codesign --dart-define=env=prod --flavor prod --build-number="$BUILD_NUMBER" --build-name="$VERSION_NUMBER" --bundle-sksl-path warmup.sksl.json

      - name: Build app with new version
        if: "${{ needs.tag_release.outputs.new_version != '' }}"
        env:
          BUILD_NUMBER: ${{ github.run_number }}
          VERSION_NUMBER: ${{ needs.tag_release.outputs.new_version }}
        run: flutter build ios --config-only --release --no-codesign --dart-define=env=prod --flavor prod --build-number="$BUILD_NUMBER" --build-name="$VERSION_NUMBER" --bundle-sksl-path warmup.sksl.json

      - name: Deploy app to Testflight
        uses: maierj/fastlane-action@v2.3.0
        with:
          lane: 'closed_beta'
          subdirectory: ios
        env:
          ITC_TEAM_ID: '${{ secrets.ITC_TEAM_ID }}'
          DEVELOPER_PORTAL_TEAM_ID: '${{ secrets.DEVELOPER_PORTAL_TEAM_ID }}'
          FASTLANE_APPLE_ID: '${{ secrets.FASTLANE_APPLE_EMAIL_ID }}'
          FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: '${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}'
          MATCH_PASSWORD: '${{ secrets.MATCH_PASSWORD }}'
          GIT_AUTHORIZATION: '${{ secrets.GIT_AUTHORIZATION }}'
          TEMP_KEYCHAIN_PASSWORD: '${{ secrets.TEMP_KEYCHAIN_PASSWORD }}'
          TEMP_KEYCHAIN_USER: '${{ secrets.TEMP_KEYCHAIN_USER }}'
          APP_SCHEME: 'prod'
          BUNDLE_ID: 'so.informed'
          BUNDLE_ID_NOTIFICATION: 'so.informed.ImageNotification'
          PROVISIONING_PROFILE_SPECIFIER: 'match AppStore so.informed'
          PROVISIONING_PROFILE_SPECIFIER_NOTIFICATION: 'match AppStore so.informed.ImageNotification'
          APPLICATION_ID: '1577915307'

      - name: Slack Notification
        uses: 8398a7/action-slack@v3
        if: always()
        with:
          status: ${{ job.status }}
          fields: repo,author,job,took,workflow,pullRequest
          mention: 'here'
          if_mention: failure
          channel: 'C03HLNW54EN'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_RELEASES_CHANNEL_WEBHOOK_URL }}
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
