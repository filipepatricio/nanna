name: CI Build

on:
  pull_request:
    branches: [main, develop]

env:
  JAVA_VERSION: '12.x'

jobs:
  changes:
    name: Detect changed files
    runs-on: ubuntu-latest
    # Set job outputs to values from filter step
    outputs:
      app: ${{ steps.filter.outputs.app }}
      android: ${{ steps.filter.outputs.android }}
      ios: ${{ steps.filter.outputs.ios }}
      tests: ${{ steps.filter.outputs.tests }}
    steps:
      # For pull requests it's not necessary to checkout the code
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          list-files: 'json'
          filters: |
            app:
              - 'assets/**'
              - 'fonts/**'
              - 'lib/**'
              - '**.yaml'
            ios:
              - 'ios/**'
            android:
              - 'android/**'
            tests:
              - 'test/**'

  commit_lint:
    name: Commit linting
    runs-on: ubuntu-latest
    outputs:
      succeeded: ${{ steps.result.outputs.result }}
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: wagoid/commitlint-github-action@v4

      - name: Result
        id: result
        if: success()
        run: echo "::set-output name=result::true"

  code_lint_test:
    needs: [changes, commit_lint]
    if: ${{ needs.changes.outputs.tests == 'true' || needs.changes.outputs.app == 'true' || needs.changes.outputs.android == 'true' || needs.changes.outputs.ios == 'true' }}
    name: Linting & Testing
    runs-on: ubuntu-latest
    outputs:
      succeeded: ${{ steps.result.outputs.result }}
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JAVA_VERSION }}

      # Your pubspec.yaml file must contain the Flutter version under the environment:flutter: key.
      - name: Get Flutter version
        id: get-flutter-version
        uses: zgosalvez/github-actions-get-flutter-version-env@v1

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ steps.get-flutter-version.outputs.version }}
          cache: true
      - run: |
          flutter format -l 120 --dry-run --set-exit-if-changed .

      - name: Build
        run: |
          flutter pub get
          flutter pub run easy_localization:generate --source-dir ./assets/translations -f keys -o local_keys.g.dart
          flutter pub run build_runner build --delete-conflicting-outputs

      - name: Analyze & Test
        run: |
          flutter analyze .
          flutter test test/unit/wrapper_test.dart

      - name: Result
        id: result
        if: success()
        run: echo "::set-output name=result::true"

  build_android:
    needs: [changes, commit_lint, code_lint_test]
    if: ${{ needs.changes.outputs.app == 'true' || needs.changes.outputs.android == 'true' }}
    name: Android build
    runs-on: ubuntu-latest
    outputs:
      succeeded: ${{ steps.result.outputs.result }}
    timeout-minutes: 20
    steps:
      - name: Cancel previous jobs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

      - name: Checkout code
        uses: actions/checkout@v2

      # Your pubspec.yaml file must contain the Flutter version under the environment:flutter: key.
      - name: Get Flutter version
        id: get-flutter-version
        uses: zgosalvez/github-actions-get-flutter-version-env@v1

      - name: Setup
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ steps.get-flutter-version.outputs.version }}
          cache: true

      - name: Clean & Build
        run: |
          flutter pub get
          flutter pub run easy_localization:generate --source-dir ./assets/translations -f keys -o local_keys.g.dart
          flutter pub run build_runner build --delete-conflicting-outputs

      - name: Build Android app
        run: flutter build apk --release --dart-define=env=prod --flavor prod

      - name: Result
        id: result
        if: success()
        run: echo "::set-output name=result::true"

  build_ios:
    needs: [changes, commit_lint, code_lint_test]
    if: ${{ needs.changes.outputs.app == 'true' || needs.changes.outputs.ios == 'true' }}
    name: iOS build
    runs-on: macos-latest
    outputs:
      succeeded: ${{ steps.result.outputs.result }}
    timeout-minutes: 25
    steps:
      - name: Cancel previous jobs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Checkout code
        uses: actions/checkout@v2

      # Your pubspec.yaml file must contain the Flutter version under the environment:flutter: key.
      - name: Get Flutter version
        id: get-flutter-version
        uses: zgosalvez/github-actions-get-flutter-version-env@v1

      - name: Setup
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ steps.get-flutter-version.outputs.version }}
          # cache: true

      - name: Clean & Build
        run: |
          flutter pub get
          flutter pub run easy_localization:generate --source-dir ./assets/translations -f keys -o local_keys.g.dart
          flutter pub run build_runner build --delete-conflicting-outputs

      - name: Build iOS app
        run: flutter build ios --release --no-codesign --dart-define=env=prod --flavor prod

      - name: Result
        id: result
        if: success()
        run: echo "::set-output name=result::true"

  all_jobs_succeeded:
    needs: [changes, commit_lint, code_lint_test, build_android, build_ios]
    name: All jobs succeeded
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Commit linting failed
        if: ${{ needs.commit_lint.outputs.succeeded != 'true' }}
        run: exit 1

      - name: Code linting & Testing failed
        if: ${{ (needs.changes.outputs.tests == 'true' || needs.changes.outputs.app == 'true' || needs.changes.outputs.android == 'true' || needs.changes.outputs.ios == 'true') && needs.code_lint_test.outputs.succeeded != 'true' }}
        run: exit 1

      - name: Android app building failed
        if: ${{ (needs.changes.outputs.app == 'true' || needs.changes.outputs.android == 'true') &&  needs.build_android.outputs.succeeded != 'true' }}
        run: exit 1

      - name: iOS app building failed
        if: ${{ (needs.changes.outputs.app == 'true' || needs.changes.outputs.ios == 'true') && needs.build_ios.outputs.succeeded != 'true' }}
        run: exit 1
