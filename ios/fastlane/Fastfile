default_platform(:ios)

APP_SCHEME = ENV["APP_SCHEME"]
DEVELOPER_APP_IDENTIFIER = ENV["BUNDLE_ID"]
DEVELOPER_APP_IDENTIFIER_NOTIFICATION = ENV["BUNDLE_ID_NOTIFICATION"]
DEVELOPER_APP_ID = ENV["APPLICATION_ID"]
PROVISIONING_PROFILE_SPECIFIER = ENV["PROVISIONING_PROFILE_SPECIFIER"]
PROVISIONING_PROFILE_SPECIFIER_NOTIFICATION = ENV["PROVISIONING_PROFILE_SPECIFIER_NOTIFICATION"]
TEMP_KEYCHAIN_USER = ENV["TEMP_KEYCHAIN_USER"]
TEMP_KEYCHAIN_PASSWORD = ENV["TEMP_KEYCHAIN_PASSWORD"]

def delete_temp_keychain(name)
  delete_keychain(
    name: name
  ) if File.exist? File.expand_path("~/Library/Keychains/#{name}-db")
end

def create_temp_keychain(name, password)
  create_keychain(
    name: name,
    password: password,
    unlock: false,
    timeout: 0
  )
end

def ensure_temp_keychain(name, password)
  delete_temp_keychain(name)
  create_temp_keychain(name, password)
end

platform :ios do
  lane :closed_beta do
    xcversion(version: "~> 13")

    keychain_name = TEMP_KEYCHAIN_USER
    keychain_password = TEMP_KEYCHAIN_PASSWORD
    ensure_temp_keychain(keychain_name, keychain_password)

    match(
      type: 'appstore',
      app_identifier: ["#{DEVELOPER_APP_IDENTIFIER}", "#{DEVELOPER_APP_IDENTIFIER_NOTIFICATION}"],
      git_basic_authorization: Base64.strict_encode64(ENV["GIT_AUTHORIZATION"]),
      readonly: true,
      keychain_name: keychain_name,
      keychain_password: keychain_password
    )

    gym(
      configuration: "Release-#{APP_SCHEME}",
      workspace: "Runner.xcworkspace",
      scheme: "#{APP_SCHEME}",
      export_method: "app-store",
      export_options: {
        provisioningProfiles: {
            "#{DEVELOPER_APP_IDENTIFIER}" => "#{PROVISIONING_PROFILE_SPECIFIER}",
            "#{DEVELOPER_APP_IDENTIFIER_NOTIFICATION}" => "#{PROVISIONING_PROFILE_SPECIFIER_NOTIFICATION}"
        }
      }
    )

    pilot(
      apple_id: "#{DEVELOPER_APP_ID}",
      app_identifier: "#{DEVELOPER_APP_IDENTIFIER}",
      skip_waiting_for_build_processing: true,
      skip_submission: true,
      distribute_external: false,
      notify_external_testers: false,
      ipa: "./Runner.ipa"
    )

    delete_temp_keychain(keychain_name)
  end
end
