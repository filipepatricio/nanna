import 'package:better_informed_mobile/data/categories/api/categories_data_source.dart';
import 'package:better_informed_mobile/data/categories/dto/category_dto.dt.dart';
import 'package:better_informed_mobile/data/categories/dto/featured_categories_response_dto.dt.dart';
import 'package:better_informed_mobile/data/categories/dto/onboarding_categories_response_dto.dt.dart';
import 'package:better_informed_mobile/domain/app_config/app_config.dart';
import 'package:injectable/injectable.dart';

@LazySingleton(as: CategoriesDataSource, env: mockEnvs)
class CategoriesMockDataSource implements CategoriesDataSource {
  static const String _mockedIcon = '''
  <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M12.2454 19.5869C12.9599 19.5869 13.92 18.9014 13.92 18.9014C20.8733 13.8086 20.4563 9.76264 20.4563 9.76264C20.4559 8.72166 20.1395 7.70946 19.5553 6.88079C18.9712 6.05213 18.1515 5.45261 17.2216 5.17392C16.2918 4.89523 15.3028 4.95269 14.4061 5.33753C13.5093 5.72237 12.7541 6.4134 12.2559 7.30496C11.7575 6.4138 11.0022 5.72317 10.1056 5.33861C9.20895 4.95405 8.22024 4.8967 7.29053 5.17534C6.36083 5.45397 5.54128 6.05326 4.95711 6.88163C4.37295 7.71 4.0563 8.72188 4.05556 9.76264C4.05556 9.76264 3.63855 13.8075 10.5923 18.9014C10.5923 18.9014 11.5334 19.5869 12.2479 19.5869" fill="white"/>
      <path d="M12.2454 18.8369C11.8312 18.8369 11.4954 19.1727 11.4954 19.5869C11.4954 20.0011 11.8312 20.3369 12.2454 20.3369V18.8369ZM13.92 18.9014L14.3558 19.5118L14.3631 19.5065L13.92 18.9014ZM20.4563 9.76264L19.7063 9.76289C19.7063 9.78849 19.7076 9.81407 19.7102 9.83954L20.4563 9.76264ZM12.2559 7.30496L11.6013 7.67107C11.7339 7.90816 11.9844 8.05501 12.2561 8.05496C12.5277 8.05491 12.7781 7.90796 12.9106 7.67082L12.2559 7.30496ZM4.05556 9.76264L4.80161 9.83956C4.80423 9.81418 4.80555 9.78869 4.80556 9.76317L4.05556 9.76264ZM10.5923 18.9014L10.1491 19.5065L10.1508 19.5076L10.5923 18.9014ZM12.2479 20.3369C12.6621 20.3369 12.9979 20.0011 12.9979 19.5869C12.9979 19.1727 12.6621 18.8369 12.2479 18.8369V20.3369ZM12.2454 20.3369C12.7957 20.3369 13.3522 20.0888 13.6968 19.9095C13.8852 19.8115 14.0465 19.7143 14.1609 19.6416C14.2185 19.605 14.2651 19.5741 14.2982 19.5517C14.3148 19.5404 14.3281 19.5312 14.3378 19.5245C14.3426 19.5211 14.3466 19.5183 14.3496 19.5162C14.3511 19.5151 14.3524 19.5142 14.3534 19.5135C14.3539 19.5131 14.3544 19.5128 14.3548 19.5125C14.355 19.5124 14.3552 19.5123 14.3553 19.5121C14.3554 19.5121 14.3555 19.512 14.3556 19.512C14.3557 19.5119 14.3558 19.5118 13.92 18.9014C13.4842 18.291 13.4843 18.291 13.4844 18.2909C13.4844 18.2909 13.4845 18.2908 13.4845 18.2908C13.4846 18.2907 13.4847 18.2906 13.4848 18.2906C13.485 18.2904 13.4851 18.2904 13.4852 18.2903C13.4853 18.2902 13.4852 18.2903 13.4848 18.2906C13.4842 18.291 13.4826 18.2921 13.4803 18.2937C13.4756 18.297 13.4675 18.3026 13.4565 18.3101C13.4343 18.3251 13.4003 18.3477 13.3567 18.3754C13.2688 18.4313 13.1454 18.5055 13.0044 18.5788C12.6904 18.7422 12.4096 18.8369 12.2454 18.8369V20.3369ZM14.3631 19.5065C17.923 16.8991 19.6485 14.5206 20.4759 12.738C20.889 11.848 21.0743 11.1145 21.1543 10.5868C21.1942 10.3234 21.2077 10.1124 21.2105 9.95998C21.2118 9.88382 21.2105 9.82237 21.2085 9.7764C21.2075 9.75342 21.2063 9.73431 21.2052 9.71917C21.2046 9.7116 21.2041 9.70502 21.2036 9.69944C21.2034 9.69666 21.2031 9.69412 21.2029 9.69184C21.2028 9.6907 21.2027 9.68962 21.2026 9.6886C21.2025 9.6881 21.2025 9.68738 21.2024 9.68713C21.2024 9.68643 21.2023 9.68575 20.4563 9.76264C19.7102 9.83954 19.7101 9.83889 19.7101 9.83825C19.7101 9.83806 19.71 9.83744 19.71 9.83705C19.7099 9.83628 19.7098 9.83557 19.7097 9.83492C19.7096 9.83363 19.7095 9.83257 19.7095 9.83174C19.7093 9.8301 19.7093 9.8294 19.7093 9.82964C19.7093 9.83012 19.7096 9.83435 19.71 9.84225C19.7107 9.85803 19.7115 9.88848 19.7107 9.9329C19.7091 10.0217 19.7009 10.1666 19.6712 10.362C19.6121 10.7521 19.4672 11.3484 19.1153 12.1065C18.4128 13.62 16.8703 15.8109 13.4768 18.2964L14.3631 19.5065ZM21.2063 9.76239C21.2059 8.5712 20.8441 7.4073 20.1684 6.44868L18.9423 7.3129C19.4349 8.01162 19.706 8.87213 19.7063 9.76289L21.2063 9.76239ZM20.1684 6.44868C19.4921 5.4893 18.5353 4.78466 17.437 4.45549L17.0063 5.89235C17.7678 6.12057 18.4503 6.61495 18.9423 7.3129L20.1684 6.44868ZM17.437 4.45549C16.3376 4.126 15.1678 4.1945 14.1103 4.64832L14.7019 6.02675C15.4379 5.71089 16.2459 5.66445 17.0063 5.89235L17.437 4.45549ZM14.1103 4.64832C13.0541 5.10159 12.1761 5.91034 11.6012 6.93911L12.9106 7.67082C13.3322 6.91646 13.9646 6.34315 14.7019 6.02675L14.1103 4.64832ZM12.9105 6.93885C12.3353 5.91056 11.4573 5.10228 10.4012 4.64933L9.80996 6.02789C10.5472 6.34407 11.1796 6.91705 11.6013 7.67107L12.9105 6.93885ZM10.4012 4.64933C9.34388 4.19584 8.17435 4.12749 7.07522 4.45691L7.50585 5.89376C8.26612 5.66591 9.07403 5.71225 9.80996 6.02789L10.4012 4.64933ZM7.07522 4.45691C5.97716 4.786 5.0205 5.49037 4.34419 6.4494L5.57004 7.31386C6.06206 6.61616 6.7445 6.12194 7.50585 5.89376L7.07522 4.45691ZM4.34419 6.4494C3.66842 7.40766 3.30641 8.57118 3.30556 9.76211L4.80556 9.76317C4.8062 8.87258 5.07747 8.01233 5.57004 7.31386L4.34419 6.4494ZM4.05556 9.76264C3.30952 9.68573 3.30945 9.68641 3.30938 9.68711C3.30935 9.68736 3.30928 9.68808 3.30923 9.68858C3.30913 9.6896 3.30902 9.69068 3.30891 9.69182C3.30869 9.6941 3.30846 9.69664 3.30821 9.69943C3.30772 9.705 3.30718 9.71158 3.30662 9.71915C3.3055 9.73429 3.30431 9.7534 3.3033 9.77638C3.30128 9.82235 3.29997 9.88379 3.30135 9.95995C3.3041 10.1123 3.3176 10.3233 3.35753 10.5867C3.43752 11.1143 3.62291 11.8477 4.036 12.7376C4.86342 14.5201 6.58908 16.8986 10.1491 19.5065L11.0355 18.2964C7.6418 15.8104 6.09908 13.6195 5.39656 12.106C5.04468 11.348 4.89971 10.7518 4.84058 10.3618C4.81096 10.1664 4.80271 10.0216 4.8011 9.93284C4.8003 9.88844 4.80116 9.85801 4.80186 9.84224C4.8022 9.83435 4.80251 9.83013 4.80254 9.82965C4.80256 9.82941 4.80251 9.83011 4.80236 9.83176C4.80229 9.83258 4.80219 9.83364 4.80207 9.83494C4.80201 9.83559 4.80194 9.8363 4.80186 9.83707C4.80182 9.83746 4.80176 9.83808 4.80174 9.83827C4.80168 9.83891 4.80161 9.83956 4.05556 9.76264ZM10.5923 18.9014C10.1508 19.5076 10.1509 19.5077 10.151 19.5078C10.151 19.5078 10.1511 19.5079 10.1512 19.508C10.1514 19.5081 10.1516 19.5082 10.1518 19.5084C10.1522 19.5087 10.1527 19.509 10.1532 19.5094C10.1542 19.5101 10.1555 19.5111 10.157 19.5121C10.16 19.5143 10.1639 19.5171 10.1687 19.5205C10.1783 19.5273 10.1914 19.5366 10.2078 19.5479C10.2406 19.5705 10.2865 19.6016 10.3433 19.6383C10.4562 19.7113 10.6156 19.809 10.802 19.9074C11.1435 20.0877 11.6959 20.3369 12.2479 20.3369V18.8369C12.0854 18.8369 11.81 18.7434 11.5023 18.5809C11.3642 18.508 11.2436 18.4342 11.1578 18.3787C11.1152 18.3512 11.082 18.3287 11.0605 18.3138C11.0498 18.3064 11.042 18.3009 11.0375 18.2977C11.0352 18.2961 11.0337 18.2951 11.0331 18.2946C11.0328 18.2944 11.0327 18.2943 11.0329 18.2944C11.0329 18.2945 11.0331 18.2946 11.0332 18.2947C11.0333 18.2948 11.0334 18.2948 11.0335 18.2949C11.0336 18.295 11.0337 18.295 11.0337 18.2951C11.0338 18.2951 11.0339 18.2952 10.5923 18.9014Z" fill="#282B35"/>
      <path d="M2 12.4226C1.58579 12.4226 1.25 12.7584 1.25 13.1726C1.25 13.5868 1.58579 13.9226 2 13.9226V12.4226ZM8.72155 13.1726V13.9226C9.03135 13.9226 9.30926 13.7321 9.42104 13.4432L8.72155 13.1726ZM9.85515 10.2422L10.5589 9.98291C10.451 9.69014 10.1732 9.49473 9.8612 9.49221C9.5492 9.4897 9.26824 9.6806 9.15567 9.9716L9.85515 10.2422ZM11.7445 15.3704L11.0407 15.6297C11.1376 15.8927 11.3731 16.0797 11.6512 16.1146C11.9293 16.1494 12.2036 16.0263 12.3625 15.7954L11.7445 15.3704ZM13.256 13.1726V12.4226C13.009 12.4226 12.7779 12.5441 12.638 12.7476L13.256 13.1726ZM22 13.9226C22.4142 13.9226 22.75 13.5868 22.75 13.1726C22.75 12.7584 22.4142 12.4226 22 12.4226V13.9226ZM2 13.9226H8.72155V12.4226H2V13.9226ZM9.42104 13.4432L10.5546 10.5128L9.15567 9.9716L8.02206 12.902L9.42104 13.4432ZM9.1514 10.5015L11.0407 15.6297L12.4482 15.1111L10.5589 9.98291L9.1514 10.5015ZM12.3625 15.7954L13.8739 13.5976L12.638 12.7476L11.1265 14.9454L12.3625 15.7954ZM13.256 13.9226H22V12.4226H13.256V13.9226Z" fill="#282B35"/>
      </svg>)
  ''';

  static const _mockedCategory = CategoryDTO(
    name: 'politics',
    id: 'id',
    slug: 'slug',
    icon: _mockedIcon,
  );

  @override
  Future<OnboardingCategoriesResponseDTO> getOnboardingCategories() async => const OnboardingCategoriesResponseDTO(
        [
          _mockedCategory,
          _mockedCategory,
          _mockedCategory,
          _mockedCategory,
          _mockedCategory,
          _mockedCategory,
          _mockedCategory,
          _mockedCategory,
          _mockedCategory,
          _mockedCategory,
          _mockedCategory,
          _mockedCategory,
        ],
      );

  @override
  Future<FeaturedCategoriesResponseDTO> getFeaturedCategories() {
    // TODO: implement getFeaturedCategories
    throw UnimplementedError();
  }
}
